import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e}from"./app.bf1fe36d.js";const t={},p=e(`<h2 id="phpword生成word文档的两种方式" tabindex="-1"><a class="header-anchor" href="#phpword生成word文档的两种方式" aria-hidden="true">#</a> phpword生成word文档的两种方式</h2><h4 id="_1-全自主生成" tabindex="-1"><a class="header-anchor" href="#_1-全自主生成" aria-hidden="true">#</a> 1 全自主生成</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">require_once</span> <span class="token string single-quoted-string">&#39;bootstrap.php&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Creating the new document...</span>
<span class="token variable">$phpWord</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>PhpOffice<span class="token punctuation">\\</span>PhpWord<span class="token punctuation">\\</span>PhpWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* Note: any element you append to a document must reside inside of a Section. */</span>

<span class="token comment">// Adding an empty Section to the document...</span>
<span class="token variable">$section</span> <span class="token operator">=</span> <span class="token variable">$phpWord</span><span class="token operator">-&gt;</span><span class="token function">addSection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Adding Text element to the Section having font styled by default...</span>
<span class="token variable">$section</span><span class="token operator">-&gt;</span><span class="token function">addText</span><span class="token punctuation">(</span>
    <span class="token string single-quoted-string">&#39;&quot;Learn from yesterday, live for today, hope for tomorrow. &#39;</span>
        <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;The important thing is not to stop questioning.&quot; &#39;</span>
        <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;(Albert Einstein)&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/*
 * Note: it&#39;s possible to customize font style of the Text element you add in three ways:
 * - inline;
 * - using named font style (new font style object will be implicitly created);
 * - using explicitly created font style object.
 */</span>

<span class="token comment">// Adding Text element with font customized inline...</span>
<span class="token variable">$section</span><span class="token operator">-&gt;</span><span class="token function">addText</span><span class="token punctuation">(</span>
    <span class="token string single-quoted-string">&#39;&quot;Great achievement is usually born of great sacrifice, &#39;</span>
        <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;and is never the result of selfishness.&quot; &#39;</span>
        <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;(Napoleon Hill)&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Tahoma&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;size&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">30</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Adding Text element with font customized using named font style...</span>
<span class="token variable">$fontStyleName</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;oneUserDefinedStyle&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$phpWord</span><span class="token operator">-&gt;</span><span class="token function">addFontStyle</span><span class="token punctuation">(</span>
    <span class="token variable">$fontStyleName</span><span class="token punctuation">,</span>
    <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Tahoma&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;size&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;color&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;1B2232&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bold&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$section</span><span class="token operator">-&gt;</span><span class="token function">addText</span><span class="token punctuation">(</span>
    <span class="token string single-quoted-string">&#39;&quot;The greatest accomplishment is not in never falling, &#39;</span>
        <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;but in rising again after you fall.&quot; &#39;</span>
        <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;(Vince Lombardi)&#39;</span><span class="token punctuation">,</span>
    <span class="token variable">$fontStyleName</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Adding Text element with font customized using explicitly created font style object...</span>
<span class="token variable">$fontStyle</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>PhpOffice<span class="token punctuation">\\</span>PhpWord<span class="token punctuation">\\</span>Style<span class="token punctuation">\\</span>Font</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$fontStyle</span><span class="token operator">-&gt;</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$fontStyle</span><span class="token operator">-&gt;</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Tahoma&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$fontStyle</span><span class="token operator">-&gt;</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$myTextElement</span> <span class="token operator">=</span> <span class="token variable">$section</span><span class="token operator">-&gt;</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&quot;Believe you can and you\\&#39;re halfway there.&quot; (Theodor Roosevelt)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$myTextElement</span><span class="token operator">-&gt;</span><span class="token function">setFontStyle</span><span class="token punctuation">(</span><span class="token variable">$fontStyle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Saving the document as OOXML file...</span>
<span class="token variable">$objWriter</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>PhpOffice<span class="token punctuation">\\</span>PhpWord<span class="token punctuation">\\</span>IOFactory</span><span class="token operator">::</span><span class="token function">createWriter</span><span class="token punctuation">(</span><span class="token variable">$phpWord</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Word2007&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$objWriter</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;helloWorld.docx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// // Saving the document as ODF file...</span>
<span class="token comment">// $objWriter = \\PhpOffice\\PhpWord\\IOFactory::createWriter($phpWord, &#39;ODText&#39;);</span>
<span class="token comment">// $objWriter-&gt;save(&#39;helloWorld.odt&#39;);</span>

<span class="token comment">// // Saving the document as HTML file...</span>
<span class="token comment">// $objWriter = \\PhpOffice\\PhpWord\\IOFactory::createWriter($phpWord, &#39;HTML&#39;);</span>
<span class="token comment">// $objWriter-&gt;save(&#39;helloWorld.html&#39;);</span>

<span class="token comment">/* Note: we skip RTF, because it&#39;s not XML-based and requires a different example. */</span>
<span class="token comment">/* Note: we skip PDF, because &quot;HTML-to-PDF&quot; approach is used to create PDF documents. */</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-模板生成" tabindex="-1"><a class="header-anchor" href="#_2-模板生成" aria-hidden="true">#</a> 2 模板生成</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">require_once</span> <span class="token string single-quoted-string">&#39;bootstrap.php&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">PhpOffice<span class="token punctuation">\\</span>PhpWord<span class="token punctuation">\\</span>TemplateProcessor</span><span class="token punctuation">;</span>


<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$studentname</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;studentname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$teachername</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$rank</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;rank&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;contents&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// 根据模板生成用户信息word</span>
<span class="token variable">$templateProcessor</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateProcessor</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;./word/a.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$templateProcessor</span><span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token variable">$studentname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$templateProcessor</span><span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;rank&#39;</span><span class="token punctuation">,</span> <span class="token variable">$rank</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$templateProcessor</span><span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;contents&#39;</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$templateProcessor</span><span class="token operator">-&gt;</span><span class="token function">saveAs</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;./word/&quot;</span> <span class="token operator">.</span> <span class="token variable">$studentname</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function i(l,c){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","phpword生成word.html.vue"]]);export{d as default};
