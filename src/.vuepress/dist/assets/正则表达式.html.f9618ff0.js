import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as s,e as n,a as t,b as o}from"./app.bf1fe36d.js";const d={},u=n("<table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td><strong>[ABC]</strong></td><td>匹配 <strong>[...]</strong> 中的所有字符，例如 <strong>[aeiou]</strong> 匹配字符串 &quot;google runoob taobao&quot; 中所有的 e o u a 字母。</td></tr><tr><td><strong>[^ABC]</strong></td><td>匹配除了 <strong>[...]</strong> 中字符的所有字符，例如 <strong>[^aeiou]</strong> 匹配字符串 &quot;google runoob taobao&quot; 中除了 e o u a 字母的所有字符。</td></tr><tr><td><strong>[A-Z]</strong></td><td>[A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。</td></tr><tr><td><strong>.</strong></td><td>匹配除换行符（\\n、\\r）之外的任何单个字符，相等于 [^\\n\\r]</td></tr><tr><td><strong>[\\s\\S]</strong></td><td>匹配所有。\\s 是匹配所有空白符，包括换行，\\S 非空白符，不包括换行。</td></tr><tr><td><strong>\\w</strong></td><td>匹配字母、数字、下划线。等价于 [A-Za-z0-9_]</td></tr></tbody></table>",1),g=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"字符"),t("th",null,"描述")])]),t("tbody",null,[t("tr",null,[t("td",null,"*"),t("td",null,[o("匹配前面的子表达式零次或多次。例如，"),t("strong",null,"zo*"),o(" 能匹配 "),t("strong",null,'"z"'),o(" 以及 "),t("strong",null,'"zoo"'),o("。***** 等价于 "),t("strong",null,"{0,}"),o("。")])]),t("tr",null,[t("td",null,"+"),t("td",null,[o("匹配前面的子表达式一次或多次。例如，"),t("strong",null,"zo+"),o(" 能匹配 "),t("strong",null,'"zo"'),o(' 以及 "'),t("strong",null,'zoo"'),o("，但不能匹配 "),t("strong",null,'"z"'),o("。"),t("strong",null,"+"),o(" 等价于 "),t("strong",null,"{1,}"),o("。")])]),t("tr",null,[t("td",null,"?"),t("td",null,[o("匹配前面的子表达式零次或一次。例如，"),t("strong",null,"do(es)?"),o(" 可以匹配 "),t("strong",null,'"do"'),o(" 、 "),t("strong",null,'"does"'),o("、 "),t("strong",null,'"doxy"'),o(" 中的 "),t("strong",null,'"do"'),o(" 和 "),t("strong",null,'"does"'),o("。"),t("strong",null,"?"),o(" 等价于 "),t("strong",null,"{0,1}"),o("。")])]),t("tr",null,[t("td",{n:""}),t("td",null,[o("n 是一个非负整数。匹配确定的 "),t("strong",null,"n"),o(" 次。例如，"),t("strong",null,"o{2}"),o(" 不能匹配 "),t("strong",null,'"Bob"'),o(" 中的 "),t("strong",null,"o"),o("，但是能匹配 "),t("strong",null,'"food"'),o(" 中的两个 "),t("strong",null,"o"),o("。")])]),t("tr",null,[t("td",{"n,":""}),t("td",null,[o("n 是一个非负整数。至少匹配n 次。例如，"),t("strong",null,"o{2,}"),o(" 不能匹配 "),t("strong",null,'"Bob"'),o(" 中的 "),t("strong",null,"o"),o("，但能匹配 "),t("strong",null,'"foooood"'),o(" 中的所有 "),t("strong",null,"o"),o("。"),t("strong",null,"o{1,}"),o(" 等价于 "),t("strong",null,"o+"),o("。"),t("strong",null,"o{0,}"),o(" 则等价于 "),t("strong",null,"o*"),o("。")])]),t("tr",null,[t("td",{"n,m":""}),t("td",null,[o("m 和 n 均为非负整数，其中 n <= m。最少匹配 n 次且最多匹配 m 次。例如，"),t("strong",null,"o{1,3}"),o(" 将匹配 "),t("strong",null,'"fooooood"'),o(" 中的前三个 "),t("strong",null,"o"),o("。"),t("strong",null,"o{0,1}"),o(" 等价于 "),t("strong",null,"o?"),o("。请注意在逗号和两个数之间不能有空格。")])])])],-1),e=n("<table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>^</td><td>匹配输入字符串开始的位置</td></tr><tr><td>$</td><td>匹配输入字符串结尾的位置</td></tr><tr><td>\\b</td><td>匹配一个单词边界，即字与空格间的位置。</td></tr><tr><td>\\B</td><td>非单词边界匹配。</td></tr></tbody></table>",1),a=[u,g,e];function _(h,c){return r(),s("div",null,a)}const m=l(d,[["render",_],["__file","正则表达式.html.vue"]]);export{m as default};
